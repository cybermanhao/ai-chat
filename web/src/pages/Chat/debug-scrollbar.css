/* 临时调试：强制显示滚动条 */

/* 方法1: 直接在MessageList上添加内联样式来测试 */
.message-list {
  /* 强制显示滚动条以便调试 */
  height: 400px !important; /* 强制固定高度 */
  
  /* 备用滚动条样式，以防mixin不工作 */
  &::-webkit-scrollbar {
    width: 8px !important;
    background: #f0f0f0 !important;
  }
  
  &::-webkit-scrollbar-thumb {
    background: #999 !important;
    border-radius: 4px !important;
  }
  
  &::-webkit-scrollbar-thumb:hover {
    background: #666 !important;
  }
}

/* 方法2: 添加测试内容来填充高度 */
.message-list::after {
  content: "";
  display: block;
  height: 1000px;
  width: 1px;
  background: red;
  opacity: 0.1;
}

/* 在浏览器Console中运行这些命令来测试滚动条 */
/*
// 1. 检查MessageList元素
const messageList = document.querySelector('.message-list');
console.log('MessageList found:', !!messageList);

// 2. 检查CSS变量
const computedStyle = getComputedStyle(document.documentElement);
console.log('CSS Variables:', {
  borderColorSplit: computedStyle.getPropertyValue('--border-color-split'),
  borderColorBase: computedStyle.getPropertyValue('--border-color-base')
});

// 3. 检查滚动相关属性
if (messageList) {
  console.log('Scroll properties:', {
    scrollHeight: messageList.scrollHeight,
    clientHeight: messageList.clientHeight,
    offsetHeight: messageList.offsetHeight,
    overflowY: getComputedStyle(messageList).overflowY
  });
}

// 4. 强制设置滚动条样式
if (messageList) {
  messageList.style.cssText += `
    height: 300px !important;
    overflow-y: scroll !important;
  `;
  
  // 添加测试内容
  const testDiv = document.createElement('div');
  testDiv.style.cssText = 'height: 800px; background: linear-gradient(red, blue); opacity: 0.3;';
  testDiv.textContent = 'Test scroll content';
  messageList.appendChild(testDiv);
  
  console.log('Test content added, scroll should be visible now');
}
*/
